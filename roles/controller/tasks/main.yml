---
# tasks file for controller
- name: Deploy TNTInfra root ca
  template:
    src: tntinfra.crt.j2
    dest: /etc/pki/ca-trust/source/anchors/tntinfra.crt
  register: controller_deployed_ca

- name: Run update-ca-trust if required
  command: /usr/bin/update-ca-trust
  when: controller_deployed_ca.changed

- name: Upload manifest.zip
  delegate_to: localhost
  run_once: true
  ansible.controller.tower_license:
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}"
    manifest: "{{ controller_zip}}"
    force: yes
    validate_certs: no
  when: controler_zip is defined

- name: Configure LDAP settings
  delegate_to: localhost
  run_once: true
  ansible.controller.settings:
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}"
    validate_certs: no
    settings:
      AUTH_LDAP_SERVER_URI: "{{ controller_ldap_server_uri }}"
      AUTH_LDAP_BIND_DN: "{{ controller_ldap_bind_dn }}"
      AUTH_LDAP_BIND_PASSWORD: "{{ controller_ldap_bind_password }}"
      AUTH_LDAP_START_TLS: "{{ controller_ldap_start_tls }}"
      AUTH_LDAP_USER_SEARCH: "{{ controller_ldap_user_search }}"
      AUTH_LDAP_USER_ATTR_MAP: "{{ controller_ldap_user_attr_map }}"
      AUTH_LDAP_GROUP_SEARCH: "{{ controller_ldap_group_search }}"
      AUTH_LDAP_GROUP_TYPE: "{{ controller_ldap_group_type }}"
      AUTH_LDAP_GROUP_TYPE_PARAMS: "{{ controller_ldap_group_type_params}}"
      AUTH_LDAP_USER_FLAGS_BY_GROUP: "{{ controller_ldap_user_flags_by_group }}"
      AUTH_LDAP_ORGANIZATION_MAP: "{{ controller_ldap_organization_map }}"
      AUTH_LDAP_TEAM_MAP: "{{ controller_ldap_team_map }}"

# - name: Set the controller url in settings
#   ansible.controller.tower_settings:
#     name: TOWER_URL_BASE
#     controller_host: "{{ controller_url_base }}"
#     controller_username: "{{ controller_username }}"
#     controller_password: "{{ controller_password }}"
#     # controller_oauthtoken: "{{ controller_oauthtoken }}"
#     validate_certs: no
