- name: Populate ocp_install_state_file
  set_fact:
    ocp_install_state_file: "{{ aws_cluster_base_directory }}/{{ aws_cluster_name }}/.openshift_install_state.json"

- name: Check if openshift_install_state.json exists
  stat:
    path: "{{ ocp_install_state_file }}"
  register: ocp_install_state

- name: Fail if OpenShift install state does not exists
  fail:
    msg: "Could not find install state"
  when: not ocp_install_state.state.exists

- name: Read OpenShift install state
  command: "cat {{ ocp_install_state_file }}"
  register: ocp_install_state_raw

- name: Convert install state to json
  set_fact:
    ocp_install_state: "{{ ocp_install_state_raw | from_json }}"
    ocp_instance_id: "{{ ocp_install_state | json_query('*installconfig.ClusterID.InfraID')}}"
    aws_cluster_tag: "kubernetes.io/cluster/{{ ocp_instance_id }}"

- name: Collect instance facts
  community.aws.ec2_instance_info:
    region: "{{ aws_region }}"
    filter:
      instance-state-name: stopped
      tag-key: "{{ ocp_instance_id }}"
  register: ec2_info

# - debug:
#     msg: "{{ q('subelements',ec2_info.instances,'instance_id') }}"

- debug: var=ec2_info

# - name: Shutdown instance
#   community.aws.ec2_instance:
#     instance_ids: "{{ item.instance_id }}"
#     state: stopped
#     region: "{{ aws_region }}"
#   with_items: "{{ ec2_info.instances }}"
