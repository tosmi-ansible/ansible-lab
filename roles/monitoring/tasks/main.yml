---
- name: Check if node_export is already at destination
  stat:
    path: "/tmp/node_exporter-{{ monitoring_node_exporter_version}}.linux-{{ monitoring_node_exporter_platform }}.tar.gz"
  register: monitoring_node_exporter_download

- name: Download node_exporter
  get_url:
    url: "{{ monitoring_node_exporter_base_url }}/v{{ monitoring_node_exporter_version}}/node_exporter-{{ monitoring_node_exporter_version}}.linux-{{ monitoring_node_exporter_platform }}.tar.gz"
    dest: /tmp/
  when:
    - not monitoring_node_exporter_download.stat.exists

- name: Extract node export to {{ monitoring_node_exporter_dest }}
  unarchive:
    src: "/tmp/node_exporter-{{ monitoring_node_exporter_version}}.linux-{{ monitoring_node_exporter_platform }}.tar.gz"
    dest: "{{ monitoring_node_exporter_dest }}"
    extra_opts:
      - --strip-components=1
    remote_src: yes

- name: Install systemd node_exporter.service
  copy:
    src: node_exporter.service
    dest: /etc/systemd/system
    owner: root
    group: root
    mode: '0644'
  register: monitoring_node_exporter_systemd

- name: Reload the systemd daemon
  command: /usr/bin/systemctl daemon-reload
  when: monitoring_node_exporter_systemd.changed

- name: Deploy the sysconfig node_exporter file
  copy:
    src: sysconfig.node_exporter
    dest: /etc/sysconfig/node_exporter
    owner: root
    group: root
    mode: '0644'

- name: Create the node_exporter user
  user:
    name: node_exporter
    comment: Node exporter user
    shell: /bin/nologin
    uid: 9100

- name: Enable the node_exporter systemd service
  service:
    name: node_exporter
    state: started
    enabled: yes

- name: Allow incoming connections to port 9100
  ansible.posix.firewalld:
    zone: public
    port: 9100/tcp
    permanent: yes
    state: enabled
    immediate: yes
