- name: Register to Red Hat Satellite pool
  redhat_subscription:
    state: present
    org_id: "{{ satellite.org_id }}"
    activationkey: "{{ satellite.activation_key }}"
    pool: '^Red Hat Satellite'
    syspurpose:
      usage: "Red Hat Lab Satellite"
      sync: true

- name: Enable required repos
  rhsm_repository:
    name:
      - rhel-8-for-x86_64-baseos-rpms
      - rhel-8-for-x86_64-appstream-rpms
      - satellite-6.11-for-rhel-8-x86_64-rpms
      - satellite-maintenance-6.11-for-rhel-8-x86_64-rpms
    state: enabled

- name: Enable satellite module
  command: dnf module enable -y satellite:el8
  register: result
  changed_when:
    - '"Enabling module streams" in result.stdout'

- name: Install satellite package
  package:
    state: present
    name:
      - satellite
      - chrony
      - sos

- name: Enable chrony
  service:
    name: chronyd
    state: started
    enabled: yes

# - name: Deploy answer file from template
#   template:
#     src: lab-satellite-answers.yaml.j2
#     dest: /etc/foreman-installer/scenarios.d/satellite-answers.yaml

- name: Store satellte TLS key in tmp dir
  copy:
    dest: /tmp/satellite.key
    content: "{{ satellite.key }}"

- name: Store satellte TLS cert in tmp dir
  copy:
    dest: /tmp/satellite.crt
    content: "{{ satellite.cert }}"

- name: Store CA TLS cert in tmp dir
  copy:
    dest: /tmp/ca.crt
    content: "{{ satellite.cacert }}"

- name: Check if Satellite was installed
  stat:
    path: /etc/foreman-installer/scenarios.d/.installed
  register: satellite_installed

- name: Fail if satellite needs to be installed
  fail:
    msg: "Please install satellite via satellite-installer now"
  when: not satellite_installed.stat.exists


# - name: Install satellite software
#   command: satellite-installer --scenario satellite
