---
- name: Create VM's required for an AAP installation
  gather_facts: false
  become: false
  hosts:
    - localhost
  roles:
    - kubevirt-vm
  vars:
    kubevirt_vms:
      namespace: aap
      ssh_public_key: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIYhjnWzsArZVyyTa1E6sDbH06rUGDAhAF3bf3pmeBtm toni@stderr.at
      vms:
        - name: controller01
          datasource: rhel9
          storage: 60Gi
          memory: 16Gi
          cores: 4
          mac: 02:e0:d7:00:00:0c
        - name: pgsql
          datasource: rhel9
          storage: 100Gi
          memory: 16Gi
          cores: 4
          mac: 02:e0:d7:00:00:0e
        - name: hub
          datasource: rhel9
          storage: 60Gi
          memory: 8Gi
          cores: 2
          mac: 02:e0:d7:00:00:14
        - name: events
          datasource: rhel9
          storage: 40Gi
          memory: 16Gi
          cores: 4
          mac: 02:e0:d7:00:00:12
        - name: exec01
          datasource: rhel9
          storage: 40Gi
          memory: 8Gi
          cores: 2
          mac: 02:e0:d7:00:00:13

- name: Red Hat registration
  gather_facts: false
  become: true
  remote_user: admin
  hosts:
    - namespace_aap
  tasks:
    - name: Run subscription-manager registery
      community.general.redhat_subscription:
        state: present
        org_id: 13048846
        activationkey: Playground

    - name: Register the insights client
      redhat.insights.insights_register:
        state: present
      become: true

    - name: Set a FQDN hostname (required for AAP)
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"
        use: systemd

    - name: Install packages (required for AAP)
      ansible.builtin.dnf:
        state: present
        name:
          - ansible-core
          - wget
          - git
          - rsync

- name: Prepare AAP installation
  gather_facts: false
  remote_user: admin
  become: true
  hosts:
    - controller01.lan.stderr.at
  roles:
    - { role: infra.aap_utilities.aap_setup_download }
    - { role: infra.aap_utilities.aap_setup_prepare }

- name: Configure initial LDAP authentication
  gather_facts: false
  become: true
  hosts:
    - localhost
  tasks:
    - ansible.controller.settings:
        controller_host: "{{ controller_host }}"
        controller_username: "{{ controller_username }}"
        controller_password: "{{ controller_password }}"
        validate_certs: no
        settings:
          AUTH_LDAP_SERVER_URI: "{{ controller_ldap_server_uri }}"
          AUTH_LDAP_BIND_DN: "{{ controller_ldap_bind_dn }}"
          AUTH_LDAP_BIND_PASSWORD: "{{ controller_ldap_bind_password }}"
          AUTH_LDAP_START_TLS: "{{ controller_ldap_start_tls }}"
          AUTH_LDAP_USER_SEARCH: "{{ controller_ldap_user_search }}"
          AUTH_LDAP_USER_ATTR_MAP: "{{ controller_ldap_user_attr_map }}"
          AUTH_LDAP_GROUP_SEARCH: "{{ controller_ldap_group_search }}"
          AUTH_LDAP_GROUP_TYPE: "{{ controller_ldap_group_type }}"
          AUTH_LDAP_GROUP_TYPE_PARAMS: "{{ controller_ldap_group_type_params}}"
          AUTH_LDAP_USER_FLAGS_BY_GROUP: "{{ controller_ldap_user_flags_by_group }}"
          AUTH_LDAP_ORGANIZATION_MAP: "{{ controller_ldap_organization_map }}"
          AUTH_LDAP_TEAM_MAP: "{{ controller_ldap_team_map }}"
